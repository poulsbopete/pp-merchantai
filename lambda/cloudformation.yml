AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lambda function for hourly merchant data generation'

Parameters:
  ElasticsearchHost:
    Type: String
    Default: 'https://ai-assistants-ffcafb.es.us-east-1.aws.elastic.cloud'
    Description: 'Elasticsearch host URL'
  
  ElasticsearchUsername:
    Type: String
    Default: 'VFpHZFpwZ0JuckxKTnZGLTF5SE46dFpMNGxfV3pEbVJYZTFRZHRNZkg4UQ=='
    Description: 'Elasticsearch API key (base64 encoded)'
  
  ElasticsearchIndex:
    Type: String
    Default: 'pp-merchantai'
    Description: 'Elasticsearch index name'

Resources:
  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: pp-merchantai-data-generator-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  # Lambda Function
  DataGeneratorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: pp-merchantai-data-generator
      Runtime: python3.11
      Handler: data_generator.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import json
          def lambda_handler(event, context):
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello from Lambda!')
              }
      Timeout: 300
      MemorySize: 512
      Environment:
        Variables:
          ELASTICSEARCH_HOST: !Ref ElasticsearchHost
          ELASTICSEARCH_USERNAME: !Ref ElasticsearchUsername
          ELASTICSEARCH_INDEX: !Ref ElasticsearchIndex
      Tags:
        - Key: Project
          Value: pp-merchantai
        - Key: Purpose
          Value: data-generation

  # EventBridge Rule for hourly execution
  HourlyRule:
    Type: AWS::Events::Rule
    Properties:
      Name: pp-merchantai-hourly-data-generation
      Description: 'Trigger data generation every hour'
      ScheduleExpression: 'rate(1 hour)'
      State: ENABLED
      Targets:
        - Arn: !GetAtt DataGeneratorFunction.Arn
          Id: DataGeneratorTarget

  # Permission for EventBridge to invoke Lambda
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DataGeneratorFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt HourlyRule.Arn

  # CloudWatch Log Group
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${DataGeneratorFunction}'
      RetentionInDays: 14

Outputs:
  LambdaFunctionArn:
    Description: 'ARN of the Lambda function'
    Value: !GetAtt DataGeneratorFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionArn'
  
  LambdaFunctionName:
    Description: 'Name of the Lambda function'
    Value: !Ref DataGeneratorFunction
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunctionName'
  
  EventBridgeRuleArn:
    Description: 'ARN of the EventBridge rule'
    Value: !GetAtt HourlyRule.Arn
    Export:
      Name: !Sub '${AWS::StackName}-EventBridgeRuleArn' 